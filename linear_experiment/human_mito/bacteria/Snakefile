
# Global variables
Nfrag = 10000
Lfrag = 40
DAMS=["dhigh"]
RATES=["0.1", "0.9"]

rule all:
    input:
        "refSoil.fa.fai",
        expand("refSoil_n{nfrags}_l{fraglen}.fa.gz", nfrags=[Nfrag], fraglen=[Lfrag]),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}.fa.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_adpt.fa", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s1.fq", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s2.fq", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r1.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r2.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_s{rate}.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS, rate=RATES),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r1_s{rate}.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS, rate=RATES),
        expand("simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r2_s{rate}.fq.gz", nfrags=[Nfrag], fraglen=[Lfrag], dam=DAMS, rate=RATES)

ruleorder: ungzip_file > art

rule ungzip_file:
    input:
        "{prefix}.fq.gz"
    output:
        "{prefix}.fq"
    shell:
        """
        rm -f {output}
        gunzip -c {input} > {output}
        """

rule faidx:
    input:
        "refSoil.fa"
    output:
        "refSoil.fa.fai"
    shell:
        "/home/ctools/samtools-1.13/samtools faidx {input}"

rule fragsim:
    input:
        input_1="refSoil.fa",
        input_2="refSoil.fa.fai"
    output:
        "refSoil_n{nfrags}_l{fraglen}.fa.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "/home/ctools/gargammel/src/fragSim -n {wildcards.nfrags} -l {wildcards.fraglen} --circ NC_022660.1 {input.input_1} | gzip > {output}"

rule deamsim:
    input:
        "refSoil_n{nfrags}_l{fraglen}.fa.gz"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}.fa.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "/home/ctools/gargammel/src/deamSim -matfile {wildcards.dam} {input} | gzip > {output}"

rule adptsim:
    input:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}.fa.gz"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_adpt.fa"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "/home/ctools/gargammel/src/adptSim -l 125 -artp {output} {input}"

rule art:
    input:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_adpt.fa"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s1.fq",
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s2.fq"
    wildcard_constraints:
        fraglen="\d+"
    params:
        out_prefix="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s"
    shell:
        "/home/ctools/gargammel/art_src_MountRainier_Linux/art_illumina -ss HS25 -amp -na -p -l 125 -c 1 -i {input} -o {params.out_prefix}"

rule adptsimz:
    input:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_adpt.fa"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_adpt.fa.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "gzip {input}"

rule artz1:
    input:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s1.fq"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s1.fq.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "gzip {input}"

rule artz2:
    input:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s2.fq"
    output:
        "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s2.fq.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "gzip {input}"

rule trimmed:
    input:
        input_1="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s1.fq.gz",
        input_2="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_s2.fq.gz"
    output:
        output_1="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o.fq.gz",
        output_2="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r1.fq.gz",
        output_3="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r2.fq.gz"
    params:
        out_prefix="simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o"
    wildcard_constraints:
        fraglen="\d+"
    shell:
        "/home/ctools/leeHom-1.2.15/src/leeHom --ancientdna -fq1 {input.input_1} -fq2 {input.input_2} -fqo {params.out_prefix}"

rule subsamp_o:
    input: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o.fq.gz"
    output: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_s{rate}.fq.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell: "/home/ctools/seqtk-1.3/seqtk sample -s 321 {input} {wildcards.rate} |gzip > {output}"

rule subsamp_r1:
    input: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r1.fq.gz"
    output: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r1_s{rate}.fq.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell: "/home/ctools/seqtk-1.3/seqtk sample -s 321 {input} {wildcards.rate} |gzip > {output}"

rule subsamp_r2:
    input: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r2.fq.gz"
    output: "simulations/refSoil_n{nfrags}_l{fraglen}_d{dam}_o_r2_s{rate}.fq.gz"
    wildcard_constraints:
        fraglen="\d+"
    shell: "/home/ctools/seqtk-1.3/seqtk sample -s 321 {input} {wildcards.rate} |gzip > {output}"
