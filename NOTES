Note: vg_corrected is modified from vg version 1.44

Modified files: 
- src/minimizer_mapper.cpp
- src/subcommand/minimizer_main.cpp
- src/subcommand/giraffe_main.cpp
- src/index_registry.cpp
- index_registry.hpp
- depts/gbwtgraph/src/utils.cpp
- include/gbwtgraph/utils.h

To create the indexes on the euka graph

./vg_corrected/bin/vg minimizer -t 60 -p -g ../euka_dir/euka_db.gbwt -d ../euka_dir/euka_db.dist -o euka_db.min ../euka_dir/euka_db.og

./vg_corrected/bin/vg rymer -t 60 -p -g ../euka_dir/euka_db.gbwt -d ../euka_dir/euka_db.dist -o euka_db.ry ../euka_dir/euka_db.og

And on the test graph:

./vg_corrected/bin/vg minimizer -t 60 -p -g test_graph/test.gbwt -d test_graph/test.dist -o test_graph/test.min test_graph/test.xg -k 5 -w 6

./vg_corrected/bin/vg rymer -t 60 -p -g test_graph/test.gbwt -d test_graph/test.dist -o test_graph/test.ry test_graph/test.xg -k 5 -w 6

////////////////////////////////////////////////

To run giraffe:

./vg_corrected/bin/vg giraffe -f test_data/BearCreak/BearCreakCombo.pp.rmdup.fq.gz -t 60 \
-m euka_db.min -q euka_db.ry -d ../euka_dir/euka_db.dist -Z ../euka_dir/euka_db.giraffe.gbz > test.gam

Use vg filter -q 1 to get only the mapped alignments

And on test graph:

./vg_corrected/bin/vg giraffe -f test_graph/test.fq -t 60 -m test_graph/test.min -q test_graph/test.ry -d test_graph/test.dist -Z test_graph/test.giraffe.gbz > test.gam

/////////////////////////////////////////////////


To run Euka:

nohup ./vgan/bin/vgan euka -t 60 -fq1 test_data/three_dhigh_100.fq.gz --euka_db ../euka_dir/ --outFrag > log.out &

And on the test data:

./vgan/bin/vgan euka -t 60 -fq1 test_data/test.fq --euka_db ../euka_dir/


////////////////////////////////////////////////

BEAR DATA NO CORRECTION

Number of mapped fragments: 4085
Number of fragments after filtering: 1127

Quality score recalibration: TODO


BATTLE STRATEGY:

 - UNDERSTAND HOW HASHING WORKS
 - WRITE RYMER INDEX
 - CODE TO CHECK IF QUERY MATCHES IN KMER AND/OR RYMER INDEX
 - IF MATCH IN KMER, YOURE GOLDEN
 - IF MATCH IN RYMER BUT NOT KMER:
       FOR EACH BASE IN QUERY:
           OBTAIN POSITION ON FRAGMENT + QUALITY SCORE
           COMPUTE P_B = P(BASE | MINIMIZER AND DAMAGE)
 - SET THRESHOLD DELTA
 - IF PRODUCT OF P_b >= DELTA, LET THROUGH
 - BENCHMARK AND WRITE PAPER


